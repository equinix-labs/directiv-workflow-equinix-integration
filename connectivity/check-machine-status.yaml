description: "This is a simple workflow that checks the status of a provisioned machine"

functions:
  - id: http-request
    image: gcr.io/direktiv/functions/http-request:1.0
    type: knative-workflow

states:
  - id: check-available
    type: switch
    conditions:
    - condition: 'jq(.available != "active")'
      transition: delay-2s

  - id: delay-2s
    type: delay
    duration: PT2S
    log: Delaying for 2 seconds before checking again ...
    transition: get-status

  - id: get-status
    # log: jq(.)
    log: Checking the device status ...
    type: action
    action:
      function: http-request
      secrets: ["EQUINIX_METAL_TOKEN"]
      input:
        url: 'https://api.equinix.com/metal/v1/devices/jq(.deviceid)'
        method: GET
        headers:
          X-Auth-Token: jq(.secrets.EQUINIX_METAL_TOKEN)
    transform: jq(.available = .return[0].result.state)
    transition: check-available
    catch:
    - error: "*"
      transition: exception-catch

  #
  # Handle any failed connections
  #
  - id: exception-catch
    log: 'Failed with the following: jq(.) - creating an incident'
    type: generateEvent
    event:
      type: com.direktiv.exception.create.incident
      source: provision-machines
      data: jq(.error)
